//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace IRFixIncomeSystemApprovement.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://www.xquant.com/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback MobileLogonOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileLogonOffOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileResetPwdOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileGetTaskNodeGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileGetTaskNodeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileGetTaskNodeLstByPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileSingleTaskNodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileSingleTaskNodeTreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobilePledgeReserveBondOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileSingleTraceLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileSingleLimitresultOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileSingleTradeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileSingleSetPackDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileCheckBeforeActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileCheckBeforeAction_BatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileApproveTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileApproveTask_BatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileCheckApproveTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileQuerySecuPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileQuerySecuPositionPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileGetMyInstSecuOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileSingleTradeTargetOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileApproveTaskByNodeId_BatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileCheckBeforeActionByNodeId_BatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileGetUserEmpowerOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileGetAfterEmpowerOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileGetMyEmpowerOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileUpdateUserEmpowerOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileRevokeUserEmpowerOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileGetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback PushMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNoticeOperationCompleted;
        
        private System.Threading.SendOrPostCallback MakeCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback VersionUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback resourceUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileSingleTraceLog_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileSingleTradeTarget_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback MobileTaskTradeDetailOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::IRFixIncomeSystemApprovement.Properties.Settings.Default.IRFixIncomeSystemApprovement_WebReference_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event MobileLogonCompletedEventHandler MobileLogonCompleted;
        
        /// <remarks/>
        public event MobileLogonOffCompletedEventHandler MobileLogonOffCompleted;
        
        /// <remarks/>
        public event MobileResetPwdCompletedEventHandler MobileResetPwdCompleted;
        
        /// <remarks/>
        public event MobileGetTaskNodeGroupCompletedEventHandler MobileGetTaskNodeGroupCompleted;
        
        /// <remarks/>
        public event MobileGetTaskNodeListCompletedEventHandler MobileGetTaskNodeListCompleted;
        
        /// <remarks/>
        public event MobileGetTaskNodeLstByPageCompletedEventHandler MobileGetTaskNodeLstByPageCompleted;
        
        /// <remarks/>
        public event MobileSingleTaskNodeCompletedEventHandler MobileSingleTaskNodeCompleted;
        
        /// <remarks/>
        public event MobileSingleTaskNodeTreeCompletedEventHandler MobileSingleTaskNodeTreeCompleted;
        
        /// <remarks/>
        public event MobilePledgeReserveBondCompletedEventHandler MobilePledgeReserveBondCompleted;
        
        /// <remarks/>
        public event MobileSingleTraceLogCompletedEventHandler MobileSingleTraceLogCompleted;
        
        /// <remarks/>
        public event MobileSingleLimitresultCompletedEventHandler MobileSingleLimitresultCompleted;
        
        /// <remarks/>
        public event MobileSingleTradeDetailCompletedEventHandler MobileSingleTradeDetailCompleted;
        
        /// <remarks/>
        public event MobileSingleSetPackDetailCompletedEventHandler MobileSingleSetPackDetailCompleted;
        
        /// <remarks/>
        public event MobileCheckBeforeActionCompletedEventHandler MobileCheckBeforeActionCompleted;
        
        /// <remarks/>
        public event MobileCheckBeforeAction_BatchCompletedEventHandler MobileCheckBeforeAction_BatchCompleted;
        
        /// <remarks/>
        public event MobileApproveTaskCompletedEventHandler MobileApproveTaskCompleted;
        
        /// <remarks/>
        public event MobileApproveTask_BatchCompletedEventHandler MobileApproveTask_BatchCompleted;
        
        /// <remarks/>
        public event MobileCheckApproveTaskCompletedEventHandler MobileCheckApproveTaskCompleted;
        
        /// <remarks/>
        public event MobileQuerySecuPositionCompletedEventHandler MobileQuerySecuPositionCompleted;
        
        /// <remarks/>
        public event MobileQuerySecuPositionPageCompletedEventHandler MobileQuerySecuPositionPageCompleted;
        
        /// <remarks/>
        public event MobileGetMyInstSecuCompletedEventHandler MobileGetMyInstSecuCompleted;
        
        /// <remarks/>
        public event MobileSingleTradeTargetCompletedEventHandler MobileSingleTradeTargetCompleted;
        
        /// <remarks/>
        public event MobileApproveTaskByNodeId_BatchCompletedEventHandler MobileApproveTaskByNodeId_BatchCompleted;
        
        /// <remarks/>
        public event MobileCheckBeforeActionByNodeId_BatchCompletedEventHandler MobileCheckBeforeActionByNodeId_BatchCompleted;
        
        /// <remarks/>
        public event MobileGetUserEmpowerCompletedEventHandler MobileGetUserEmpowerCompleted;
        
        /// <remarks/>
        public event MobileGetAfterEmpowerCompletedEventHandler MobileGetAfterEmpowerCompleted;
        
        /// <remarks/>
        public event MobileGetMyEmpowerCompletedEventHandler MobileGetMyEmpowerCompleted;
        
        /// <remarks/>
        public event MobileUpdateUserEmpowerCompletedEventHandler MobileUpdateUserEmpowerCompleted;
        
        /// <remarks/>
        public event MobileRevokeUserEmpowerCompletedEventHandler MobileRevokeUserEmpowerCompleted;
        
        /// <remarks/>
        public event MobileGetUserCompletedEventHandler MobileGetUserCompleted;
        
        /// <remarks/>
        public event PushMessageCompletedEventHandler PushMessageCompleted;
        
        /// <remarks/>
        public event GetNoticeCompletedEventHandler GetNoticeCompleted;
        
        /// <remarks/>
        public event MakeCodeCompletedEventHandler MakeCodeCompleted;
        
        /// <remarks/>
        public event VerifyCompletedEventHandler VerifyCompleted;
        
        /// <remarks/>
        public event VersionUpdateCompletedEventHandler VersionUpdateCompleted;
        
        /// <remarks/>
        public event resourceUpdateCompletedEventHandler resourceUpdateCompleted;
        
        /// <remarks/>
        public event MobileSingleTraceLog_NewCompletedEventHandler MobileSingleTraceLog_NewCompleted;
        
        /// <remarks/>
        public event MobileSingleTradeTarget_NewCompletedEventHandler MobileSingleTradeTarget_NewCompleted;
        
        /// <remarks/>
        public event MobileTaskTradeDetailCompletedEventHandler MobileTaskTradeDetailCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileLogon", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileLogon(string aUserCode, string aPwd, string aMAC) {
            object[] results = this.Invoke("MobileLogon", new object[] {
                        aUserCode,
                        aPwd,
                        aMAC});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileLogonAsync(string aUserCode, string aPwd, string aMAC) {
            this.MobileLogonAsync(aUserCode, aPwd, aMAC, null);
        }
        
        /// <remarks/>
        public void MobileLogonAsync(string aUserCode, string aPwd, string aMAC, object userState) {
            if ((this.MobileLogonOperationCompleted == null)) {
                this.MobileLogonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileLogonOperationCompleted);
            }
            this.InvokeAsync("MobileLogon", new object[] {
                        aUserCode,
                        aPwd,
                        aMAC}, this.MobileLogonOperationCompleted, userState);
        }
        
        private void OnMobileLogonOperationCompleted(object arg) {
            if ((this.MobileLogonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileLogonCompleted(this, new MobileLogonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileLogonOff", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileLogonOff(string aUserCode) {
            object[] results = this.Invoke("MobileLogonOff", new object[] {
                        aUserCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileLogonOffAsync(string aUserCode) {
            this.MobileLogonOffAsync(aUserCode, null);
        }
        
        /// <remarks/>
        public void MobileLogonOffAsync(string aUserCode, object userState) {
            if ((this.MobileLogonOffOperationCompleted == null)) {
                this.MobileLogonOffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileLogonOffOperationCompleted);
            }
            this.InvokeAsync("MobileLogonOff", new object[] {
                        aUserCode}, this.MobileLogonOffOperationCompleted, userState);
        }
        
        private void OnMobileLogonOffOperationCompleted(object arg) {
            if ((this.MobileLogonOffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileLogonOffCompleted(this, new MobileLogonOffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileResetPwd", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileResetPwd(string aUserCode, string aOldPwd, string aNewPwd) {
            object[] results = this.Invoke("MobileResetPwd", new object[] {
                        aUserCode,
                        aOldPwd,
                        aNewPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileResetPwdAsync(string aUserCode, string aOldPwd, string aNewPwd) {
            this.MobileResetPwdAsync(aUserCode, aOldPwd, aNewPwd, null);
        }
        
        /// <remarks/>
        public void MobileResetPwdAsync(string aUserCode, string aOldPwd, string aNewPwd, object userState) {
            if ((this.MobileResetPwdOperationCompleted == null)) {
                this.MobileResetPwdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileResetPwdOperationCompleted);
            }
            this.InvokeAsync("MobileResetPwd", new object[] {
                        aUserCode,
                        aOldPwd,
                        aNewPwd}, this.MobileResetPwdOperationCompleted, userState);
        }
        
        private void OnMobileResetPwdOperationCompleted(object arg) {
            if ((this.MobileResetPwdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileResetPwdCompleted(this, new MobileResetPwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileGetTaskNodeGroup", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileGetTaskNodeGroup(string aTargetType, string aUserCode, System.DateTime aBeg_date, System.DateTime aEnd_date, int aDataType) {
            object[] results = this.Invoke("MobileGetTaskNodeGroup", new object[] {
                        aTargetType,
                        aUserCode,
                        aBeg_date,
                        aEnd_date,
                        aDataType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileGetTaskNodeGroupAsync(string aTargetType, string aUserCode, System.DateTime aBeg_date, System.DateTime aEnd_date, int aDataType) {
            this.MobileGetTaskNodeGroupAsync(aTargetType, aUserCode, aBeg_date, aEnd_date, aDataType, null);
        }
        
        /// <remarks/>
        public void MobileGetTaskNodeGroupAsync(string aTargetType, string aUserCode, System.DateTime aBeg_date, System.DateTime aEnd_date, int aDataType, object userState) {
            if ((this.MobileGetTaskNodeGroupOperationCompleted == null)) {
                this.MobileGetTaskNodeGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileGetTaskNodeGroupOperationCompleted);
            }
            this.InvokeAsync("MobileGetTaskNodeGroup", new object[] {
                        aTargetType,
                        aUserCode,
                        aBeg_date,
                        aEnd_date,
                        aDataType}, this.MobileGetTaskNodeGroupOperationCompleted, userState);
        }
        
        private void OnMobileGetTaskNodeGroupOperationCompleted(object arg) {
            if ((this.MobileGetTaskNodeGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileGetTaskNodeGroupCompleted(this, new MobileGetTaskNodeGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileGetTaskNodeList", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileGetTaskNodeList(string aTargetType, string aUserCode, System.DateTime aBeg_date, System.DateTime aEnd_date, int aDataType, string aGroupCode) {
            object[] results = this.Invoke("MobileGetTaskNodeList", new object[] {
                        aTargetType,
                        aUserCode,
                        aBeg_date,
                        aEnd_date,
                        aDataType,
                        aGroupCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileGetTaskNodeListAsync(string aTargetType, string aUserCode, System.DateTime aBeg_date, System.DateTime aEnd_date, int aDataType, string aGroupCode) {
            this.MobileGetTaskNodeListAsync(aTargetType, aUserCode, aBeg_date, aEnd_date, aDataType, aGroupCode, null);
        }
        
        /// <remarks/>
        public void MobileGetTaskNodeListAsync(string aTargetType, string aUserCode, System.DateTime aBeg_date, System.DateTime aEnd_date, int aDataType, string aGroupCode, object userState) {
            if ((this.MobileGetTaskNodeListOperationCompleted == null)) {
                this.MobileGetTaskNodeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileGetTaskNodeListOperationCompleted);
            }
            this.InvokeAsync("MobileGetTaskNodeList", new object[] {
                        aTargetType,
                        aUserCode,
                        aBeg_date,
                        aEnd_date,
                        aDataType,
                        aGroupCode}, this.MobileGetTaskNodeListOperationCompleted, userState);
        }
        
        private void OnMobileGetTaskNodeListOperationCompleted(object arg) {
            if ((this.MobileGetTaskNodeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileGetTaskNodeListCompleted(this, new MobileGetTaskNodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileGetTaskNodeLstByPage", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileGetTaskNodeLstByPage(int aPage, string aTargetType, string aUserCode, string aBegDate, string aEndDate, int aDataType, string aGroupCode) {
            object[] results = this.Invoke("MobileGetTaskNodeLstByPage", new object[] {
                        aPage,
                        aTargetType,
                        aUserCode,
                        aBegDate,
                        aEndDate,
                        aDataType,
                        aGroupCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileGetTaskNodeLstByPageAsync(int aPage, string aTargetType, string aUserCode, string aBegDate, string aEndDate, int aDataType, string aGroupCode) {
            this.MobileGetTaskNodeLstByPageAsync(aPage, aTargetType, aUserCode, aBegDate, aEndDate, aDataType, aGroupCode, null);
        }
        
        /// <remarks/>
        public void MobileGetTaskNodeLstByPageAsync(int aPage, string aTargetType, string aUserCode, string aBegDate, string aEndDate, int aDataType, string aGroupCode, object userState) {
            if ((this.MobileGetTaskNodeLstByPageOperationCompleted == null)) {
                this.MobileGetTaskNodeLstByPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileGetTaskNodeLstByPageOperationCompleted);
            }
            this.InvokeAsync("MobileGetTaskNodeLstByPage", new object[] {
                        aPage,
                        aTargetType,
                        aUserCode,
                        aBegDate,
                        aEndDate,
                        aDataType,
                        aGroupCode}, this.MobileGetTaskNodeLstByPageOperationCompleted, userState);
        }
        
        private void OnMobileGetTaskNodeLstByPageOperationCompleted(object arg) {
            if ((this.MobileGetTaskNodeLstByPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileGetTaskNodeLstByPageCompleted(this, new MobileGetTaskNodeLstByPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileSingleTaskNode", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileSingleTaskNode(string aUserCode, int aTaskId) {
            object[] results = this.Invoke("MobileSingleTaskNode", new object[] {
                        aUserCode,
                        aTaskId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileSingleTaskNodeAsync(string aUserCode, int aTaskId) {
            this.MobileSingleTaskNodeAsync(aUserCode, aTaskId, null);
        }
        
        /// <remarks/>
        public void MobileSingleTaskNodeAsync(string aUserCode, int aTaskId, object userState) {
            if ((this.MobileSingleTaskNodeOperationCompleted == null)) {
                this.MobileSingleTaskNodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileSingleTaskNodeOperationCompleted);
            }
            this.InvokeAsync("MobileSingleTaskNode", new object[] {
                        aUserCode,
                        aTaskId}, this.MobileSingleTaskNodeOperationCompleted, userState);
        }
        
        private void OnMobileSingleTaskNodeOperationCompleted(object arg) {
            if ((this.MobileSingleTaskNodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileSingleTaskNodeCompleted(this, new MobileSingleTaskNodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileSingleTaskNodeTree", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileSingleTaskNodeTree(string aUserCode, int aTaskId) {
            object[] results = this.Invoke("MobileSingleTaskNodeTree", new object[] {
                        aUserCode,
                        aTaskId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileSingleTaskNodeTreeAsync(string aUserCode, int aTaskId) {
            this.MobileSingleTaskNodeTreeAsync(aUserCode, aTaskId, null);
        }
        
        /// <remarks/>
        public void MobileSingleTaskNodeTreeAsync(string aUserCode, int aTaskId, object userState) {
            if ((this.MobileSingleTaskNodeTreeOperationCompleted == null)) {
                this.MobileSingleTaskNodeTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileSingleTaskNodeTreeOperationCompleted);
            }
            this.InvokeAsync("MobileSingleTaskNodeTree", new object[] {
                        aUserCode,
                        aTaskId}, this.MobileSingleTaskNodeTreeOperationCompleted, userState);
        }
        
        private void OnMobileSingleTaskNodeTreeOperationCompleted(object arg) {
            if ((this.MobileSingleTaskNodeTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileSingleTaskNodeTreeCompleted(this, new MobileSingleTaskNodeTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobilePledgeReserveBond", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobilePledgeReserveBond(string aUserCode, int aSysOrdId) {
            object[] results = this.Invoke("MobilePledgeReserveBond", new object[] {
                        aUserCode,
                        aSysOrdId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobilePledgeReserveBondAsync(string aUserCode, int aSysOrdId) {
            this.MobilePledgeReserveBondAsync(aUserCode, aSysOrdId, null);
        }
        
        /// <remarks/>
        public void MobilePledgeReserveBondAsync(string aUserCode, int aSysOrdId, object userState) {
            if ((this.MobilePledgeReserveBondOperationCompleted == null)) {
                this.MobilePledgeReserveBondOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobilePledgeReserveBondOperationCompleted);
            }
            this.InvokeAsync("MobilePledgeReserveBond", new object[] {
                        aUserCode,
                        aSysOrdId}, this.MobilePledgeReserveBondOperationCompleted, userState);
        }
        
        private void OnMobilePledgeReserveBondOperationCompleted(object arg) {
            if ((this.MobilePledgeReserveBondCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobilePledgeReserveBondCompleted(this, new MobilePledgeReserveBondCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileSingleTraceLog", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileSingleTraceLog(string aUserCode, int aTaskId) {
            object[] results = this.Invoke("MobileSingleTraceLog", new object[] {
                        aUserCode,
                        aTaskId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileSingleTraceLogAsync(string aUserCode, int aTaskId) {
            this.MobileSingleTraceLogAsync(aUserCode, aTaskId, null);
        }
        
        /// <remarks/>
        public void MobileSingleTraceLogAsync(string aUserCode, int aTaskId, object userState) {
            if ((this.MobileSingleTraceLogOperationCompleted == null)) {
                this.MobileSingleTraceLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileSingleTraceLogOperationCompleted);
            }
            this.InvokeAsync("MobileSingleTraceLog", new object[] {
                        aUserCode,
                        aTaskId}, this.MobileSingleTraceLogOperationCompleted, userState);
        }
        
        private void OnMobileSingleTraceLogOperationCompleted(object arg) {
            if ((this.MobileSingleTraceLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileSingleTraceLogCompleted(this, new MobileSingleTraceLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileSingleLimitresult", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileSingleLimitresult(string aUserCode, int aTaskId, bool aIsIncludeConfirmed, bool aIsIncludeOrdered) {
            object[] results = this.Invoke("MobileSingleLimitresult", new object[] {
                        aUserCode,
                        aTaskId,
                        aIsIncludeConfirmed,
                        aIsIncludeOrdered});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileSingleLimitresultAsync(string aUserCode, int aTaskId, bool aIsIncludeConfirmed, bool aIsIncludeOrdered) {
            this.MobileSingleLimitresultAsync(aUserCode, aTaskId, aIsIncludeConfirmed, aIsIncludeOrdered, null);
        }
        
        /// <remarks/>
        public void MobileSingleLimitresultAsync(string aUserCode, int aTaskId, bool aIsIncludeConfirmed, bool aIsIncludeOrdered, object userState) {
            if ((this.MobileSingleLimitresultOperationCompleted == null)) {
                this.MobileSingleLimitresultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileSingleLimitresultOperationCompleted);
            }
            this.InvokeAsync("MobileSingleLimitresult", new object[] {
                        aUserCode,
                        aTaskId,
                        aIsIncludeConfirmed,
                        aIsIncludeOrdered}, this.MobileSingleLimitresultOperationCompleted, userState);
        }
        
        private void OnMobileSingleLimitresultOperationCompleted(object arg) {
            if ((this.MobileSingleLimitresultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileSingleLimitresultCompleted(this, new MobileSingleLimitresultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileSingleTradeDetail", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileSingleTradeDetail(string aUserCode, int aSysOrdId) {
            object[] results = this.Invoke("MobileSingleTradeDetail", new object[] {
                        aUserCode,
                        aSysOrdId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileSingleTradeDetailAsync(string aUserCode, int aSysOrdId) {
            this.MobileSingleTradeDetailAsync(aUserCode, aSysOrdId, null);
        }
        
        /// <remarks/>
        public void MobileSingleTradeDetailAsync(string aUserCode, int aSysOrdId, object userState) {
            if ((this.MobileSingleTradeDetailOperationCompleted == null)) {
                this.MobileSingleTradeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileSingleTradeDetailOperationCompleted);
            }
            this.InvokeAsync("MobileSingleTradeDetail", new object[] {
                        aUserCode,
                        aSysOrdId}, this.MobileSingleTradeDetailOperationCompleted, userState);
        }
        
        private void OnMobileSingleTradeDetailOperationCompleted(object arg) {
            if ((this.MobileSingleTradeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileSingleTradeDetailCompleted(this, new MobileSingleTradeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileSingleSetPackDetail", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileSingleSetPackDetail(string aUserCode, int aInstId) {
            object[] results = this.Invoke("MobileSingleSetPackDetail", new object[] {
                        aUserCode,
                        aInstId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileSingleSetPackDetailAsync(string aUserCode, int aInstId) {
            this.MobileSingleSetPackDetailAsync(aUserCode, aInstId, null);
        }
        
        /// <remarks/>
        public void MobileSingleSetPackDetailAsync(string aUserCode, int aInstId, object userState) {
            if ((this.MobileSingleSetPackDetailOperationCompleted == null)) {
                this.MobileSingleSetPackDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileSingleSetPackDetailOperationCompleted);
            }
            this.InvokeAsync("MobileSingleSetPackDetail", new object[] {
                        aUserCode,
                        aInstId}, this.MobileSingleSetPackDetailOperationCompleted, userState);
        }
        
        private void OnMobileSingleSetPackDetailOperationCompleted(object arg) {
            if ((this.MobileSingleSetPackDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileSingleSetPackDetailCompleted(this, new MobileSingleSetPackDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileCheckBeforeAction", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileCheckBeforeAction(int aTaskNodeId, int aTaskId, string aUserCode, string targetType, int aDataTypeCurrent) {
            object[] results = this.Invoke("MobileCheckBeforeAction", new object[] {
                        aTaskNodeId,
                        aTaskId,
                        aUserCode,
                        targetType,
                        aDataTypeCurrent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileCheckBeforeActionAsync(int aTaskNodeId, int aTaskId, string aUserCode, string targetType, int aDataTypeCurrent) {
            this.MobileCheckBeforeActionAsync(aTaskNodeId, aTaskId, aUserCode, targetType, aDataTypeCurrent, null);
        }
        
        /// <remarks/>
        public void MobileCheckBeforeActionAsync(int aTaskNodeId, int aTaskId, string aUserCode, string targetType, int aDataTypeCurrent, object userState) {
            if ((this.MobileCheckBeforeActionOperationCompleted == null)) {
                this.MobileCheckBeforeActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileCheckBeforeActionOperationCompleted);
            }
            this.InvokeAsync("MobileCheckBeforeAction", new object[] {
                        aTaskNodeId,
                        aTaskId,
                        aUserCode,
                        targetType,
                        aDataTypeCurrent}, this.MobileCheckBeforeActionOperationCompleted, userState);
        }
        
        private void OnMobileCheckBeforeActionOperationCompleted(object arg) {
            if ((this.MobileCheckBeforeActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileCheckBeforeActionCompleted(this, new MobileCheckBeforeActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileCheckBeforeAction_Batch", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileCheckBeforeAction_Batch(string aTaskIds, string aUserCode, string targetType, int aDataTypeCurrent) {
            object[] results = this.Invoke("MobileCheckBeforeAction_Batch", new object[] {
                        aTaskIds,
                        aUserCode,
                        targetType,
                        aDataTypeCurrent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileCheckBeforeAction_BatchAsync(string aTaskIds, string aUserCode, string targetType, int aDataTypeCurrent) {
            this.MobileCheckBeforeAction_BatchAsync(aTaskIds, aUserCode, targetType, aDataTypeCurrent, null);
        }
        
        /// <remarks/>
        public void MobileCheckBeforeAction_BatchAsync(string aTaskIds, string aUserCode, string targetType, int aDataTypeCurrent, object userState) {
            if ((this.MobileCheckBeforeAction_BatchOperationCompleted == null)) {
                this.MobileCheckBeforeAction_BatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileCheckBeforeAction_BatchOperationCompleted);
            }
            this.InvokeAsync("MobileCheckBeforeAction_Batch", new object[] {
                        aTaskIds,
                        aUserCode,
                        targetType,
                        aDataTypeCurrent}, this.MobileCheckBeforeAction_BatchOperationCompleted, userState);
        }
        
        private void OnMobileCheckBeforeAction_BatchOperationCompleted(object arg) {
            if ((this.MobileCheckBeforeAction_BatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileCheckBeforeAction_BatchCompleted(this, new MobileCheckBeforeAction_BatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileApproveTask", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileApproveTask(int aTaskId, int aTaskNodeId, string targetType, int aAction, string actionUser, string actionNote, int aDataTypeCurrent, int[] aCCRoleList) {
            object[] results = this.Invoke("MobileApproveTask", new object[] {
                        aTaskId,
                        aTaskNodeId,
                        targetType,
                        aAction,
                        actionUser,
                        actionNote,
                        aDataTypeCurrent,
                        aCCRoleList});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileApproveTaskAsync(int aTaskId, int aTaskNodeId, string targetType, int aAction, string actionUser, string actionNote, int aDataTypeCurrent, int[] aCCRoleList) {
            this.MobileApproveTaskAsync(aTaskId, aTaskNodeId, targetType, aAction, actionUser, actionNote, aDataTypeCurrent, aCCRoleList, null);
        }
        
        /// <remarks/>
        public void MobileApproveTaskAsync(int aTaskId, int aTaskNodeId, string targetType, int aAction, string actionUser, string actionNote, int aDataTypeCurrent, int[] aCCRoleList, object userState) {
            if ((this.MobileApproveTaskOperationCompleted == null)) {
                this.MobileApproveTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileApproveTaskOperationCompleted);
            }
            this.InvokeAsync("MobileApproveTask", new object[] {
                        aTaskId,
                        aTaskNodeId,
                        targetType,
                        aAction,
                        actionUser,
                        actionNote,
                        aDataTypeCurrent,
                        aCCRoleList}, this.MobileApproveTaskOperationCompleted, userState);
        }
        
        private void OnMobileApproveTaskOperationCompleted(object arg) {
            if ((this.MobileApproveTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileApproveTaskCompleted(this, new MobileApproveTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileApproveTask_Batch", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileApproveTask_Batch(string aTaskIds, string targetType, int aAction, string actionUser, string actionNote, int aDataTypeCurrent, string aCCRoles) {
            object[] results = this.Invoke("MobileApproveTask_Batch", new object[] {
                        aTaskIds,
                        targetType,
                        aAction,
                        actionUser,
                        actionNote,
                        aDataTypeCurrent,
                        aCCRoles});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileApproveTask_BatchAsync(string aTaskIds, string targetType, int aAction, string actionUser, string actionNote, int aDataTypeCurrent, string aCCRoles) {
            this.MobileApproveTask_BatchAsync(aTaskIds, targetType, aAction, actionUser, actionNote, aDataTypeCurrent, aCCRoles, null);
        }
        
        /// <remarks/>
        public void MobileApproveTask_BatchAsync(string aTaskIds, string targetType, int aAction, string actionUser, string actionNote, int aDataTypeCurrent, string aCCRoles, object userState) {
            if ((this.MobileApproveTask_BatchOperationCompleted == null)) {
                this.MobileApproveTask_BatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileApproveTask_BatchOperationCompleted);
            }
            this.InvokeAsync("MobileApproveTask_Batch", new object[] {
                        aTaskIds,
                        targetType,
                        aAction,
                        actionUser,
                        actionNote,
                        aDataTypeCurrent,
                        aCCRoles}, this.MobileApproveTask_BatchOperationCompleted, userState);
        }
        
        private void OnMobileApproveTask_BatchOperationCompleted(object arg) {
            if ((this.MobileApproveTask_BatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileApproveTask_BatchCompleted(this, new MobileApproveTask_BatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileCheckApproveTask", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileCheckApproveTask(int aTaskId, int aTaskNodeId, string targetType, int aAction, string actionUser, int aDataTypeCurrent) {
            object[] results = this.Invoke("MobileCheckApproveTask", new object[] {
                        aTaskId,
                        aTaskNodeId,
                        targetType,
                        aAction,
                        actionUser,
                        aDataTypeCurrent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileCheckApproveTaskAsync(int aTaskId, int aTaskNodeId, string targetType, int aAction, string actionUser, int aDataTypeCurrent) {
            this.MobileCheckApproveTaskAsync(aTaskId, aTaskNodeId, targetType, aAction, actionUser, aDataTypeCurrent, null);
        }
        
        /// <remarks/>
        public void MobileCheckApproveTaskAsync(int aTaskId, int aTaskNodeId, string targetType, int aAction, string actionUser, int aDataTypeCurrent, object userState) {
            if ((this.MobileCheckApproveTaskOperationCompleted == null)) {
                this.MobileCheckApproveTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileCheckApproveTaskOperationCompleted);
            }
            this.InvokeAsync("MobileCheckApproveTask", new object[] {
                        aTaskId,
                        aTaskNodeId,
                        targetType,
                        aAction,
                        actionUser,
                        aDataTypeCurrent}, this.MobileCheckApproveTaskOperationCompleted, userState);
        }
        
        private void OnMobileCheckApproveTaskOperationCompleted(object arg) {
            if ((this.MobileCheckApproveTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileCheckApproveTaskCompleted(this, new MobileCheckApproveTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileQuerySecuPosition", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileQuerySecuPosition(string aBegDate, string aSecuAccIds, string aI_CODE, string aMtypes, string aSecuType) {
            object[] results = this.Invoke("MobileQuerySecuPosition", new object[] {
                        aBegDate,
                        aSecuAccIds,
                        aI_CODE,
                        aMtypes,
                        aSecuType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileQuerySecuPositionAsync(string aBegDate, string aSecuAccIds, string aI_CODE, string aMtypes, string aSecuType) {
            this.MobileQuerySecuPositionAsync(aBegDate, aSecuAccIds, aI_CODE, aMtypes, aSecuType, null);
        }
        
        /// <remarks/>
        public void MobileQuerySecuPositionAsync(string aBegDate, string aSecuAccIds, string aI_CODE, string aMtypes, string aSecuType, object userState) {
            if ((this.MobileQuerySecuPositionOperationCompleted == null)) {
                this.MobileQuerySecuPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileQuerySecuPositionOperationCompleted);
            }
            this.InvokeAsync("MobileQuerySecuPosition", new object[] {
                        aBegDate,
                        aSecuAccIds,
                        aI_CODE,
                        aMtypes,
                        aSecuType}, this.MobileQuerySecuPositionOperationCompleted, userState);
        }
        
        private void OnMobileQuerySecuPositionOperationCompleted(object arg) {
            if ((this.MobileQuerySecuPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileQuerySecuPositionCompleted(this, new MobileQuerySecuPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileQuerySecuPositionPage", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileQuerySecuPositionPage(int aPage, string aBegDate, string aSecuAccIds, string aI_CODE, string aMtypes, string aSecuType) {
            object[] results = this.Invoke("MobileQuerySecuPositionPage", new object[] {
                        aPage,
                        aBegDate,
                        aSecuAccIds,
                        aI_CODE,
                        aMtypes,
                        aSecuType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileQuerySecuPositionPageAsync(int aPage, string aBegDate, string aSecuAccIds, string aI_CODE, string aMtypes, string aSecuType) {
            this.MobileQuerySecuPositionPageAsync(aPage, aBegDate, aSecuAccIds, aI_CODE, aMtypes, aSecuType, null);
        }
        
        /// <remarks/>
        public void MobileQuerySecuPositionPageAsync(int aPage, string aBegDate, string aSecuAccIds, string aI_CODE, string aMtypes, string aSecuType, object userState) {
            if ((this.MobileQuerySecuPositionPageOperationCompleted == null)) {
                this.MobileQuerySecuPositionPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileQuerySecuPositionPageOperationCompleted);
            }
            this.InvokeAsync("MobileQuerySecuPositionPage", new object[] {
                        aPage,
                        aBegDate,
                        aSecuAccIds,
                        aI_CODE,
                        aMtypes,
                        aSecuType}, this.MobileQuerySecuPositionPageOperationCompleted, userState);
        }
        
        private void OnMobileQuerySecuPositionPageOperationCompleted(object arg) {
            if ((this.MobileQuerySecuPositionPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileQuerySecuPositionPageCompleted(this, new MobileQuerySecuPositionPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileGetMyInstSecu", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileGetMyInstSecu(string aUserCode) {
            object[] results = this.Invoke("MobileGetMyInstSecu", new object[] {
                        aUserCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileGetMyInstSecuAsync(string aUserCode) {
            this.MobileGetMyInstSecuAsync(aUserCode, null);
        }
        
        /// <remarks/>
        public void MobileGetMyInstSecuAsync(string aUserCode, object userState) {
            if ((this.MobileGetMyInstSecuOperationCompleted == null)) {
                this.MobileGetMyInstSecuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileGetMyInstSecuOperationCompleted);
            }
            this.InvokeAsync("MobileGetMyInstSecu", new object[] {
                        aUserCode}, this.MobileGetMyInstSecuOperationCompleted, userState);
        }
        
        private void OnMobileGetMyInstSecuOperationCompleted(object arg) {
            if ((this.MobileGetMyInstSecuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileGetMyInstSecuCompleted(this, new MobileGetMyInstSecuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileSingleTradeTarget", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileSingleTradeTarget(string aUserCode, int aTaskId) {
            object[] results = this.Invoke("MobileSingleTradeTarget", new object[] {
                        aUserCode,
                        aTaskId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileSingleTradeTargetAsync(string aUserCode, int aTaskId) {
            this.MobileSingleTradeTargetAsync(aUserCode, aTaskId, null);
        }
        
        /// <remarks/>
        public void MobileSingleTradeTargetAsync(string aUserCode, int aTaskId, object userState) {
            if ((this.MobileSingleTradeTargetOperationCompleted == null)) {
                this.MobileSingleTradeTargetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileSingleTradeTargetOperationCompleted);
            }
            this.InvokeAsync("MobileSingleTradeTarget", new object[] {
                        aUserCode,
                        aTaskId}, this.MobileSingleTradeTargetOperationCompleted, userState);
        }
        
        private void OnMobileSingleTradeTargetOperationCompleted(object arg) {
            if ((this.MobileSingleTradeTargetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileSingleTradeTargetCompleted(this, new MobileSingleTradeTargetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileApproveTaskByNodeId_Batch", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileApproveTaskByNodeId_Batch(string aNodeIds, string targetType, int aAction, string actionUser, string actionNote, int aDataTypeCurrent) {
            object[] results = this.Invoke("MobileApproveTaskByNodeId_Batch", new object[] {
                        aNodeIds,
                        targetType,
                        aAction,
                        actionUser,
                        actionNote,
                        aDataTypeCurrent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileApproveTaskByNodeId_BatchAsync(string aNodeIds, string targetType, int aAction, string actionUser, string actionNote, int aDataTypeCurrent) {
            this.MobileApproveTaskByNodeId_BatchAsync(aNodeIds, targetType, aAction, actionUser, actionNote, aDataTypeCurrent, null);
        }
        
        /// <remarks/>
        public void MobileApproveTaskByNodeId_BatchAsync(string aNodeIds, string targetType, int aAction, string actionUser, string actionNote, int aDataTypeCurrent, object userState) {
            if ((this.MobileApproveTaskByNodeId_BatchOperationCompleted == null)) {
                this.MobileApproveTaskByNodeId_BatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileApproveTaskByNodeId_BatchOperationCompleted);
            }
            this.InvokeAsync("MobileApproveTaskByNodeId_Batch", new object[] {
                        aNodeIds,
                        targetType,
                        aAction,
                        actionUser,
                        actionNote,
                        aDataTypeCurrent}, this.MobileApproveTaskByNodeId_BatchOperationCompleted, userState);
        }
        
        private void OnMobileApproveTaskByNodeId_BatchOperationCompleted(object arg) {
            if ((this.MobileApproveTaskByNodeId_BatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileApproveTaskByNodeId_BatchCompleted(this, new MobileApproveTaskByNodeId_BatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileCheckBeforeActionByNodeId_Batch", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileCheckBeforeActionByNodeId_Batch(string aNodeIds, string aUserCode, string targetType, int aDataTypeCurrent) {
            object[] results = this.Invoke("MobileCheckBeforeActionByNodeId_Batch", new object[] {
                        aNodeIds,
                        aUserCode,
                        targetType,
                        aDataTypeCurrent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileCheckBeforeActionByNodeId_BatchAsync(string aNodeIds, string aUserCode, string targetType, int aDataTypeCurrent) {
            this.MobileCheckBeforeActionByNodeId_BatchAsync(aNodeIds, aUserCode, targetType, aDataTypeCurrent, null);
        }
        
        /// <remarks/>
        public void MobileCheckBeforeActionByNodeId_BatchAsync(string aNodeIds, string aUserCode, string targetType, int aDataTypeCurrent, object userState) {
            if ((this.MobileCheckBeforeActionByNodeId_BatchOperationCompleted == null)) {
                this.MobileCheckBeforeActionByNodeId_BatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileCheckBeforeActionByNodeId_BatchOperationCompleted);
            }
            this.InvokeAsync("MobileCheckBeforeActionByNodeId_Batch", new object[] {
                        aNodeIds,
                        aUserCode,
                        targetType,
                        aDataTypeCurrent}, this.MobileCheckBeforeActionByNodeId_BatchOperationCompleted, userState);
        }
        
        private void OnMobileCheckBeforeActionByNodeId_BatchOperationCompleted(object arg) {
            if ((this.MobileCheckBeforeActionByNodeId_BatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileCheckBeforeActionByNodeId_BatchCompleted(this, new MobileCheckBeforeActionByNodeId_BatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileGetUserEmpower", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileGetUserEmpower(string aUserCode) {
            object[] results = this.Invoke("MobileGetUserEmpower", new object[] {
                        aUserCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileGetUserEmpowerAsync(string aUserCode) {
            this.MobileGetUserEmpowerAsync(aUserCode, null);
        }
        
        /// <remarks/>
        public void MobileGetUserEmpowerAsync(string aUserCode, object userState) {
            if ((this.MobileGetUserEmpowerOperationCompleted == null)) {
                this.MobileGetUserEmpowerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileGetUserEmpowerOperationCompleted);
            }
            this.InvokeAsync("MobileGetUserEmpower", new object[] {
                        aUserCode}, this.MobileGetUserEmpowerOperationCompleted, userState);
        }
        
        private void OnMobileGetUserEmpowerOperationCompleted(object arg) {
            if ((this.MobileGetUserEmpowerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileGetUserEmpowerCompleted(this, new MobileGetUserEmpowerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileGetAfterEmpower", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileGetAfterEmpower(string aUserCode) {
            object[] results = this.Invoke("MobileGetAfterEmpower", new object[] {
                        aUserCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileGetAfterEmpowerAsync(string aUserCode) {
            this.MobileGetAfterEmpowerAsync(aUserCode, null);
        }
        
        /// <remarks/>
        public void MobileGetAfterEmpowerAsync(string aUserCode, object userState) {
            if ((this.MobileGetAfterEmpowerOperationCompleted == null)) {
                this.MobileGetAfterEmpowerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileGetAfterEmpowerOperationCompleted);
            }
            this.InvokeAsync("MobileGetAfterEmpower", new object[] {
                        aUserCode}, this.MobileGetAfterEmpowerOperationCompleted, userState);
        }
        
        private void OnMobileGetAfterEmpowerOperationCompleted(object arg) {
            if ((this.MobileGetAfterEmpowerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileGetAfterEmpowerCompleted(this, new MobileGetAfterEmpowerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileGetMyEmpower", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileGetMyEmpower(string aUserCode) {
            object[] results = this.Invoke("MobileGetMyEmpower", new object[] {
                        aUserCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileGetMyEmpowerAsync(string aUserCode) {
            this.MobileGetMyEmpowerAsync(aUserCode, null);
        }
        
        /// <remarks/>
        public void MobileGetMyEmpowerAsync(string aUserCode, object userState) {
            if ((this.MobileGetMyEmpowerOperationCompleted == null)) {
                this.MobileGetMyEmpowerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileGetMyEmpowerOperationCompleted);
            }
            this.InvokeAsync("MobileGetMyEmpower", new object[] {
                        aUserCode}, this.MobileGetMyEmpowerOperationCompleted, userState);
        }
        
        private void OnMobileGetMyEmpowerOperationCompleted(object arg) {
            if ((this.MobileGetMyEmpowerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileGetMyEmpowerCompleted(this, new MobileGetMyEmpowerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileUpdateUserEmpower", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileUpdateUserEmpower(string aUserCode, int aRoleId, string aAgentUserCode, string aAgentBeginDate, string aAgentEndDate, bool isRevoke) {
            object[] results = this.Invoke("MobileUpdateUserEmpower", new object[] {
                        aUserCode,
                        aRoleId,
                        aAgentUserCode,
                        aAgentBeginDate,
                        aAgentEndDate,
                        isRevoke});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileUpdateUserEmpowerAsync(string aUserCode, int aRoleId, string aAgentUserCode, string aAgentBeginDate, string aAgentEndDate, bool isRevoke) {
            this.MobileUpdateUserEmpowerAsync(aUserCode, aRoleId, aAgentUserCode, aAgentBeginDate, aAgentEndDate, isRevoke, null);
        }
        
        /// <remarks/>
        public void MobileUpdateUserEmpowerAsync(string aUserCode, int aRoleId, string aAgentUserCode, string aAgentBeginDate, string aAgentEndDate, bool isRevoke, object userState) {
            if ((this.MobileUpdateUserEmpowerOperationCompleted == null)) {
                this.MobileUpdateUserEmpowerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileUpdateUserEmpowerOperationCompleted);
            }
            this.InvokeAsync("MobileUpdateUserEmpower", new object[] {
                        aUserCode,
                        aRoleId,
                        aAgentUserCode,
                        aAgentBeginDate,
                        aAgentEndDate,
                        isRevoke}, this.MobileUpdateUserEmpowerOperationCompleted, userState);
        }
        
        private void OnMobileUpdateUserEmpowerOperationCompleted(object arg) {
            if ((this.MobileUpdateUserEmpowerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileUpdateUserEmpowerCompleted(this, new MobileUpdateUserEmpowerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileRevokeUserEmpower", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileRevokeUserEmpower(string aUserCode) {
            object[] results = this.Invoke("MobileRevokeUserEmpower", new object[] {
                        aUserCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileRevokeUserEmpowerAsync(string aUserCode) {
            this.MobileRevokeUserEmpowerAsync(aUserCode, null);
        }
        
        /// <remarks/>
        public void MobileRevokeUserEmpowerAsync(string aUserCode, object userState) {
            if ((this.MobileRevokeUserEmpowerOperationCompleted == null)) {
                this.MobileRevokeUserEmpowerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileRevokeUserEmpowerOperationCompleted);
            }
            this.InvokeAsync("MobileRevokeUserEmpower", new object[] {
                        aUserCode}, this.MobileRevokeUserEmpowerOperationCompleted, userState);
        }
        
        private void OnMobileRevokeUserEmpowerOperationCompleted(object arg) {
            if ((this.MobileRevokeUserEmpowerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileRevokeUserEmpowerCompleted(this, new MobileRevokeUserEmpowerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileGetUser", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileGetUser(string aUserCode) {
            object[] results = this.Invoke("MobileGetUser", new object[] {
                        aUserCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileGetUserAsync(string aUserCode) {
            this.MobileGetUserAsync(aUserCode, null);
        }
        
        /// <remarks/>
        public void MobileGetUserAsync(string aUserCode, object userState) {
            if ((this.MobileGetUserOperationCompleted == null)) {
                this.MobileGetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileGetUserOperationCompleted);
            }
            this.InvokeAsync("MobileGetUser", new object[] {
                        aUserCode}, this.MobileGetUserOperationCompleted, userState);
        }
        
        private void OnMobileGetUserOperationCompleted(object arg) {
            if ((this.MobileGetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileGetUserCompleted(this, new MobileGetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/PushMessage", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PushMessage(string aTitle, string aMsgBody, string aSendUser, string aTargetType) {
            object[] results = this.Invoke("PushMessage", new object[] {
                        aTitle,
                        aMsgBody,
                        aSendUser,
                        aTargetType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PushMessageAsync(string aTitle, string aMsgBody, string aSendUser, string aTargetType) {
            this.PushMessageAsync(aTitle, aMsgBody, aSendUser, aTargetType, null);
        }
        
        /// <remarks/>
        public void PushMessageAsync(string aTitle, string aMsgBody, string aSendUser, string aTargetType, object userState) {
            if ((this.PushMessageOperationCompleted == null)) {
                this.PushMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPushMessageOperationCompleted);
            }
            this.InvokeAsync("PushMessage", new object[] {
                        aTitle,
                        aMsgBody,
                        aSendUser,
                        aTargetType}, this.PushMessageOperationCompleted, userState);
        }
        
        private void OnPushMessageOperationCompleted(object arg) {
            if ((this.PushMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PushMessageCompleted(this, new PushMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/GetNotice", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNotice(string aUserCode) {
            object[] results = this.Invoke("GetNotice", new object[] {
                        aUserCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNoticeAsync(string aUserCode) {
            this.GetNoticeAsync(aUserCode, null);
        }
        
        /// <remarks/>
        public void GetNoticeAsync(string aUserCode, object userState) {
            if ((this.GetNoticeOperationCompleted == null)) {
                this.GetNoticeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNoticeOperationCompleted);
            }
            this.InvokeAsync("GetNotice", new object[] {
                        aUserCode}, this.GetNoticeOperationCompleted, userState);
        }
        
        private void OnGetNoticeOperationCompleted(object arg) {
            if ((this.GetNoticeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNoticeCompleted(this, new GetNoticeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MakeCode", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MakeCode() {
            object[] results = this.Invoke("MakeCode", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MakeCodeAsync() {
            this.MakeCodeAsync(null);
        }
        
        /// <remarks/>
        public void MakeCodeAsync(object userState) {
            if ((this.MakeCodeOperationCompleted == null)) {
                this.MakeCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeCodeOperationCompleted);
            }
            this.InvokeAsync("MakeCode", new object[0], this.MakeCodeOperationCompleted, userState);
        }
        
        private void OnMakeCodeOperationCompleted(object arg) {
            if ((this.MakeCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeCodeCompleted(this, new MakeCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/Verify", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Verify(string strGuid, string strVerifyCode) {
            object[] results = this.Invoke("Verify", new object[] {
                        strGuid,
                        strVerifyCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyAsync(string strGuid, string strVerifyCode) {
            this.VerifyAsync(strGuid, strVerifyCode, null);
        }
        
        /// <remarks/>
        public void VerifyAsync(string strGuid, string strVerifyCode, object userState) {
            if ((this.VerifyOperationCompleted == null)) {
                this.VerifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyOperationCompleted);
            }
            this.InvokeAsync("Verify", new object[] {
                        strGuid,
                        strVerifyCode}, this.VerifyOperationCompleted, userState);
        }
        
        private void OnVerifyOperationCompleted(object arg) {
            if ((this.VerifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyCompleted(this, new VerifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/VersionUpdate", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VersionUpdate(string aClientVersionInfo) {
            object[] results = this.Invoke("VersionUpdate", new object[] {
                        aClientVersionInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VersionUpdateAsync(string aClientVersionInfo) {
            this.VersionUpdateAsync(aClientVersionInfo, null);
        }
        
        /// <remarks/>
        public void VersionUpdateAsync(string aClientVersionInfo, object userState) {
            if ((this.VersionUpdateOperationCompleted == null)) {
                this.VersionUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVersionUpdateOperationCompleted);
            }
            this.InvokeAsync("VersionUpdate", new object[] {
                        aClientVersionInfo}, this.VersionUpdateOperationCompleted, userState);
        }
        
        private void OnVersionUpdateOperationCompleted(object arg) {
            if ((this.VersionUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VersionUpdateCompleted(this, new VersionUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/resourceUpdate", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string resourceUpdate(string aClientVersionInfo) {
            object[] results = this.Invoke("resourceUpdate", new object[] {
                        aClientVersionInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void resourceUpdateAsync(string aClientVersionInfo) {
            this.resourceUpdateAsync(aClientVersionInfo, null);
        }
        
        /// <remarks/>
        public void resourceUpdateAsync(string aClientVersionInfo, object userState) {
            if ((this.resourceUpdateOperationCompleted == null)) {
                this.resourceUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresourceUpdateOperationCompleted);
            }
            this.InvokeAsync("resourceUpdate", new object[] {
                        aClientVersionInfo}, this.resourceUpdateOperationCompleted, userState);
        }
        
        private void OnresourceUpdateOperationCompleted(object arg) {
            if ((this.resourceUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resourceUpdateCompleted(this, new resourceUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileSingleTraceLog_New", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileSingleTraceLog_New(string aUserCode, int aTaskId) {
            object[] results = this.Invoke("MobileSingleTraceLog_New", new object[] {
                        aUserCode,
                        aTaskId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileSingleTraceLog_NewAsync(string aUserCode, int aTaskId) {
            this.MobileSingleTraceLog_NewAsync(aUserCode, aTaskId, null);
        }
        
        /// <remarks/>
        public void MobileSingleTraceLog_NewAsync(string aUserCode, int aTaskId, object userState) {
            if ((this.MobileSingleTraceLog_NewOperationCompleted == null)) {
                this.MobileSingleTraceLog_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileSingleTraceLog_NewOperationCompleted);
            }
            this.InvokeAsync("MobileSingleTraceLog_New", new object[] {
                        aUserCode,
                        aTaskId}, this.MobileSingleTraceLog_NewOperationCompleted, userState);
        }
        
        private void OnMobileSingleTraceLog_NewOperationCompleted(object arg) {
            if ((this.MobileSingleTraceLog_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileSingleTraceLog_NewCompleted(this, new MobileSingleTraceLog_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileSingleTradeTarget_New", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileSingleTradeTarget_New(string aUserCode, int aTaskId) {
            object[] results = this.Invoke("MobileSingleTradeTarget_New", new object[] {
                        aUserCode,
                        aTaskId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileSingleTradeTarget_NewAsync(string aUserCode, int aTaskId) {
            this.MobileSingleTradeTarget_NewAsync(aUserCode, aTaskId, null);
        }
        
        /// <remarks/>
        public void MobileSingleTradeTarget_NewAsync(string aUserCode, int aTaskId, object userState) {
            if ((this.MobileSingleTradeTarget_NewOperationCompleted == null)) {
                this.MobileSingleTradeTarget_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileSingleTradeTarget_NewOperationCompleted);
            }
            this.InvokeAsync("MobileSingleTradeTarget_New", new object[] {
                        aUserCode,
                        aTaskId}, this.MobileSingleTradeTarget_NewOperationCompleted, userState);
        }
        
        private void OnMobileSingleTradeTarget_NewOperationCompleted(object arg) {
            if ((this.MobileSingleTradeTarget_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileSingleTradeTarget_NewCompleted(this, new MobileSingleTradeTarget_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xquant.com/MobileTaskTradeDetail", RequestNamespace="http://www.xquant.com/", ResponseNamespace="http://www.xquant.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MobileTaskTradeDetail(string aUserCode, int aTaskId) {
            object[] results = this.Invoke("MobileTaskTradeDetail", new object[] {
                        aUserCode,
                        aTaskId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MobileTaskTradeDetailAsync(string aUserCode, int aTaskId) {
            this.MobileTaskTradeDetailAsync(aUserCode, aTaskId, null);
        }
        
        /// <remarks/>
        public void MobileTaskTradeDetailAsync(string aUserCode, int aTaskId, object userState) {
            if ((this.MobileTaskTradeDetailOperationCompleted == null)) {
                this.MobileTaskTradeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMobileTaskTradeDetailOperationCompleted);
            }
            this.InvokeAsync("MobileTaskTradeDetail", new object[] {
                        aUserCode,
                        aTaskId}, this.MobileTaskTradeDetailOperationCompleted, userState);
        }
        
        private void OnMobileTaskTradeDetailOperationCompleted(object arg) {
            if ((this.MobileTaskTradeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MobileTaskTradeDetailCompleted(this, new MobileTaskTradeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileLogonCompletedEventHandler(object sender, MobileLogonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileLogonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileLogonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileLogonOffCompletedEventHandler(object sender, MobileLogonOffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileLogonOffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileLogonOffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileResetPwdCompletedEventHandler(object sender, MobileResetPwdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileResetPwdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileResetPwdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileGetTaskNodeGroupCompletedEventHandler(object sender, MobileGetTaskNodeGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileGetTaskNodeGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileGetTaskNodeGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileGetTaskNodeListCompletedEventHandler(object sender, MobileGetTaskNodeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileGetTaskNodeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileGetTaskNodeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileGetTaskNodeLstByPageCompletedEventHandler(object sender, MobileGetTaskNodeLstByPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileGetTaskNodeLstByPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileGetTaskNodeLstByPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileSingleTaskNodeCompletedEventHandler(object sender, MobileSingleTaskNodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileSingleTaskNodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileSingleTaskNodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileSingleTaskNodeTreeCompletedEventHandler(object sender, MobileSingleTaskNodeTreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileSingleTaskNodeTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileSingleTaskNodeTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobilePledgeReserveBondCompletedEventHandler(object sender, MobilePledgeReserveBondCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobilePledgeReserveBondCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobilePledgeReserveBondCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileSingleTraceLogCompletedEventHandler(object sender, MobileSingleTraceLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileSingleTraceLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileSingleTraceLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileSingleLimitresultCompletedEventHandler(object sender, MobileSingleLimitresultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileSingleLimitresultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileSingleLimitresultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileSingleTradeDetailCompletedEventHandler(object sender, MobileSingleTradeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileSingleTradeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileSingleTradeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileSingleSetPackDetailCompletedEventHandler(object sender, MobileSingleSetPackDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileSingleSetPackDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileSingleSetPackDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileCheckBeforeActionCompletedEventHandler(object sender, MobileCheckBeforeActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileCheckBeforeActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileCheckBeforeActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileCheckBeforeAction_BatchCompletedEventHandler(object sender, MobileCheckBeforeAction_BatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileCheckBeforeAction_BatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileCheckBeforeAction_BatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileApproveTaskCompletedEventHandler(object sender, MobileApproveTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileApproveTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileApproveTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileApproveTask_BatchCompletedEventHandler(object sender, MobileApproveTask_BatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileApproveTask_BatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileApproveTask_BatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileCheckApproveTaskCompletedEventHandler(object sender, MobileCheckApproveTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileCheckApproveTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileCheckApproveTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileQuerySecuPositionCompletedEventHandler(object sender, MobileQuerySecuPositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileQuerySecuPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileQuerySecuPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileQuerySecuPositionPageCompletedEventHandler(object sender, MobileQuerySecuPositionPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileQuerySecuPositionPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileQuerySecuPositionPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileGetMyInstSecuCompletedEventHandler(object sender, MobileGetMyInstSecuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileGetMyInstSecuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileGetMyInstSecuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileSingleTradeTargetCompletedEventHandler(object sender, MobileSingleTradeTargetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileSingleTradeTargetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileSingleTradeTargetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileApproveTaskByNodeId_BatchCompletedEventHandler(object sender, MobileApproveTaskByNodeId_BatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileApproveTaskByNodeId_BatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileApproveTaskByNodeId_BatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileCheckBeforeActionByNodeId_BatchCompletedEventHandler(object sender, MobileCheckBeforeActionByNodeId_BatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileCheckBeforeActionByNodeId_BatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileCheckBeforeActionByNodeId_BatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileGetUserEmpowerCompletedEventHandler(object sender, MobileGetUserEmpowerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileGetUserEmpowerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileGetUserEmpowerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileGetAfterEmpowerCompletedEventHandler(object sender, MobileGetAfterEmpowerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileGetAfterEmpowerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileGetAfterEmpowerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileGetMyEmpowerCompletedEventHandler(object sender, MobileGetMyEmpowerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileGetMyEmpowerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileGetMyEmpowerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileUpdateUserEmpowerCompletedEventHandler(object sender, MobileUpdateUserEmpowerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileUpdateUserEmpowerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileUpdateUserEmpowerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileRevokeUserEmpowerCompletedEventHandler(object sender, MobileRevokeUserEmpowerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileRevokeUserEmpowerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileRevokeUserEmpowerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileGetUserCompletedEventHandler(object sender, MobileGetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileGetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileGetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PushMessageCompletedEventHandler(object sender, PushMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PushMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PushMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetNoticeCompletedEventHandler(object sender, GetNoticeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNoticeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNoticeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MakeCodeCompletedEventHandler(object sender, MakeCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MakeCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MakeCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void VerifyCompletedEventHandler(object sender, VerifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void VersionUpdateCompletedEventHandler(object sender, VersionUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VersionUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VersionUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void resourceUpdateCompletedEventHandler(object sender, resourceUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class resourceUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal resourceUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileSingleTraceLog_NewCompletedEventHandler(object sender, MobileSingleTraceLog_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileSingleTraceLog_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileSingleTraceLog_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileSingleTradeTarget_NewCompletedEventHandler(object sender, MobileSingleTradeTarget_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileSingleTradeTarget_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileSingleTradeTarget_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MobileTaskTradeDetailCompletedEventHandler(object sender, MobileTaskTradeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileTaskTradeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MobileTaskTradeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591